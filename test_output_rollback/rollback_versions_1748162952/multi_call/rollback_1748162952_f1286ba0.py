# This file is auto-generated by krkn-lib.
# It contains the rollback callable and its arguments for the scenario plugin.

import os
from krkn_lib.utils import SafeLogger
from krkn_lib.ocp import KrknOpenshift
from krkn_lib.telemetry.ocp import KrknTelemetryOpenshift
from krkn_lib.models.telemetry import ScenarioTelemetry


# Rollback callable implementation
def rollback_callable(
    lib_telemetry: KrknTelemetryOpenshift,
    scenario_telemetry: ScenarioTelemetry,
    run_uuid: str,
    scenario: str,
    krkn_config: dict[str, any],
):
    """
    Rollback callable that needs krkn library and will be called multiple times.
    This should generate multiple version files.
    """
    print(f"Rollback called for run {run_uuid} with scenario {scenario}.")
    print(f"lib_telemetry: {lib_telemetry}")
    print(f"scenario_telemetry: {scenario_telemetry}")
    print(f"Krkn config: {krkn_config}")
    # Simulate a rollback operation
    # In a real scenario, this would contain logic to revert changes made during the scenario execution.
    print("Rollback operation completed successfully.")


# Setup for execution
# Create necessary variables for execution
lib_telemetry = None
scenario_telemetry = None

# Execute the rollback callable
if __name__ == "__main__":
    kubeconfig_path = os.getenv("KUBECONFIG", "/path/to/your/kubeconfig")
    log_directory = os.path.dirname(os.path.abspath(__file__))
    os.makedirs(os.path.join(log_directory, "logs"), exist_ok=True)
    telemetry_log_path = os.path.join(log_directory, "logs", "telemetry.log")
    safe_logger = SafeLogger(telemetry_log_path)

    lib_openshift = KrknOpenshift(kubeconfig_path=kubeconfig_path)
    lib_telemetry = KrknTelemetryOpenshift(safe_logger=safe_logger, lib_openshift=lib_openshift)
    scenario_telemetry = ScenarioTelemetry(kubeconfig_path=kubeconfig_path)

    print("Executing rollback callable...")
    rollback_callable(
        lib_telemetry,
        scenario_telemetry,
        "test_run_uuid_1",
        scenario="test_scenario",
        krkn_config={"key1": "value", "key2": False, "key3": 123, "key4": ["value1", "value2", "value3"]},
    )
    print("Rollback completed.")
